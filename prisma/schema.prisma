// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id           String        @id @unique @db.VarChar(255)
  email        String        @unique @db.VarChar(255)
  fullName     String        @db.VarChar(255)
  bio          String?       @db.Text()
  address      address?      @relation(fields: [addressId], references: [id])
  addressId    String?       @db.VarChar(255)
  logo         String?       @db.VarChar()
  password     String        @db.VarChar(255)
  accessToken  String?       @db.VarChar(255)
  refreshToken String?       @db.VarChar(255)
  lastActive   DateTime?     @db.Timestamp()
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  userAddress  userAddress[]
  itemstore    itemstore[]
  transaction  transaction[]
}

model address {
  id          String        @id @unique @db.VarChar(255)
  active      Boolean?      @db.Boolean
  jalan       String?       @db.VarChar(255)
  rt          String?       @db.VarChar(255)
  rw          String?       @db.VarChar(255)
  kodepos     String?       @db.VarChar(255)
  kelurahan   String?       @db.VarChar(255)
  kecamatan   String?       @db.VarChar(255)
  kota        String?       @db.VarChar(255)
  provinsi    String?       @db.VarChar(255)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  user        user[]
  userAddress userAddress[]
}

model userAddress {
  addressId String  @db.VarChar(255)
  userId    String  @db.VarChar(255)
  address   address @relation(fields: [addressId], references: [id])
  user      user    @relation(fields: [userId], references: [id])

  @@id([addressId, userId])
}

model itemstore {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @db.VarChar(255)
  total     Int      @db.Integer
  price     Int      @db.Integer
  desc      String?  @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      user     @relation(fields: [userId], references: [id])
  userId    String   @db.VarChar(255)
}

model transaction {
  id       String @id @default(uuid()) @db.Uuid
  customer String @db.Uuid
  item     Json[]
  invoice  Json?
  total    Int
  user     user   @relation(fields: [userId], references: [id])
  userId   String @db.VarChar(255)
}
